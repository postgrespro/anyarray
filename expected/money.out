SELECT
    t,
	ARRAY(
		SELECT
			v::text::money
		FROM
			generate_series(max(0, t - 10),  t) as v
	) AS v
	INTO test_money
FROM
	generate_series(1, 200) as t;
SET anyarray.similarity_type=cosine;
SELECT  t, similarity(v, '{10,9,8,7,6,5,4,3,2,1}') AS s FROM test_money 
	WHERE v % '{10,9,8,7,6,5,4,3,2,1}' ORDER BY s DESC, t;
 t  |     s      
----+------------
 10 |  0.9534626
 11 |  0.9534626
  9 |        0.9
 12 |  0.8581163
  8 | 0.84327406
  7 | 0.78262377
 13 | 0.76277006
  6 | 0.71713716
 14 |  0.6674238
  5 |  0.6454972
(10 rows)

SELECT  t, similarity(v, '{50,49,8,7,6,5,4,3,2,1}') AS s FROM test_money 
	WHERE v % '{50,49,8,7,6,5,4,3,2,1}' ORDER BY s DESC, t;
 t  |     s      
----+------------
  8 | 0.84327406
  9 |        0.8
  7 | 0.78262377
 10 | 0.76277006
 11 | 0.76277006
  6 | 0.71713716
 12 |  0.6674238
  5 |  0.6454972
(8 rows)

SET anyarray.similarity_type=jaccard;
SELECT  t, similarity(v, '{10,9,8,7,6,5,4,3,2,1}') AS s FROM test_money 
	WHERE v % '{10,9,8,7,6,5,4,3,2,1}' ORDER BY s DESC, t;
 t  |     s      
----+------------
 10 | 0.90909094
 11 | 0.90909094
  9 |  0.8181818
 12 |       0.75
  8 | 0.72727275
  7 |  0.6363636
 13 | 0.61538464
(7 rows)

SELECT  t, similarity(v, '{50,49,8,7,6,5,4,3,2,1}') AS s FROM test_money 
	WHERE v % '{50,49,8,7,6,5,4,3,2,1}' ORDER BY s DESC, t;
 t  |     s      
----+------------
  8 | 0.72727275
  9 |  0.6666667
  7 |  0.6363636
 10 | 0.61538464
 11 | 0.61538464
(5 rows)

SELECT t, v FROM test_money WHERE v && '{43,50}' ORDER BY t;
 t  |                                       v                                        
----+--------------------------------------------------------------------------------
 43 | {$33.00,$34.00,$35.00,$36.00,$37.00,$38.00,$39.00,$40.00,$41.00,$42.00,$43.00}
 44 | {$34.00,$35.00,$36.00,$37.00,$38.00,$39.00,$40.00,$41.00,$42.00,$43.00,$44.00}
 45 | {$35.00,$36.00,$37.00,$38.00,$39.00,$40.00,$41.00,$42.00,$43.00,$44.00,$45.00}
 46 | {$36.00,$37.00,$38.00,$39.00,$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00}
 47 | {$37.00,$38.00,$39.00,$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00}
 48 | {$38.00,$39.00,$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00}
 49 | {$39.00,$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00}
 50 | {$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00}
 51 | {$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00}
 52 | {$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00}
 53 | {$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00}
 54 | {$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00,$54.00}
 55 | {$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00,$54.00,$55.00}
 56 | {$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00,$54.00,$55.00,$56.00}
 57 | {$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00,$54.00,$55.00,$56.00,$57.00}
 58 | {$48.00,$49.00,$50.00,$51.00,$52.00,$53.00,$54.00,$55.00,$56.00,$57.00,$58.00}
 59 | {$49.00,$50.00,$51.00,$52.00,$53.00,$54.00,$55.00,$56.00,$57.00,$58.00,$59.00}
 60 | {$50.00,$51.00,$52.00,$53.00,$54.00,$55.00,$56.00,$57.00,$58.00,$59.00,$60.00}
(18 rows)

SELECT t, v FROM test_money WHERE v @> '{43,50}' ORDER BY t;
 t  |                                       v                                        
----+--------------------------------------------------------------------------------
 50 | {$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00}
 51 | {$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00}
 52 | {$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00}
 53 | {$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00}
(4 rows)

SELECT t, v FROM test_money WHERE v <@ '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
 t  |                                  v                                   
----+----------------------------------------------------------------------
  1 | {$0.00,$1.00}
  2 | {$0.00,$1.00,$2.00}
  3 | {$0.00,$1.00,$2.00,$3.00}
  4 | {$0.00,$1.00,$2.00,$3.00,$4.00}
  5 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00}
  6 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00}
  7 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00}
  8 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00}
  9 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00}
 10 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}
(10 rows)

SELECT t, v FROM test_money WHERE v =  '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
 t  |                                  v                                   
----+----------------------------------------------------------------------
 10 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}
(1 row)

SET anyarray.similarity_type=cosine;
SELECT t, v FROM test_money WHERE v %  '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
 t  |                                    v                                     
----+--------------------------------------------------------------------------
  3 | {$0.00,$1.00,$2.00,$3.00}
  4 | {$0.00,$1.00,$2.00,$3.00,$4.00}
  5 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00}
  6 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00}
  7 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00}
  8 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00}
  9 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00}
 10 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}
 11 | {$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00}
 12 | {$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00}
 13 | {$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00}
 14 | {$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00}
(12 rows)

SET anyarray.similarity_type=jaccard;
SELECT t, v FROM test_money WHERE v %  '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
 t  |                                   v                                    
----+------------------------------------------------------------------------
  6 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00}
  7 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00}
  8 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00}
  9 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00}
 10 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}
 11 | {$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00}
 12 | {$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00}
(7 rows)

SET anyarray.similarity_type=overlap;
SET anyarray.similarity_threshold = 3;
SELECT t, v FROM test_money WHERE v %  '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
 t  |                                      v                                       
----+------------------------------------------------------------------------------
  2 | {$0.00,$1.00,$2.00}
  3 | {$0.00,$1.00,$2.00,$3.00}
  4 | {$0.00,$1.00,$2.00,$3.00,$4.00}
  5 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00}
  6 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00}
  7 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00}
  8 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00}
  9 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00}
 10 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}
 11 | {$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00}
 12 | {$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00}
 13 | {$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00}
 14 | {$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00}
 15 | {$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00,$15.00}
 16 | {$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00,$15.00,$16.00}
 17 | {$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00,$15.00,$16.00,$17.00}
 18 | {$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00,$15.00,$16.00,$17.00,$18.00}
(17 rows)

RESET anyarray.similarity_threshold;
CREATE INDEX idx_test_money ON test_money USING gist (v _money_aa_ops);
ERROR:  operator class "_money_aa_ops" does not exist for access method "gist"
SET enable_seqscan=off;
EXPLAIN (COSTS OFF) SELECT t, v FROM test_money WHERE v && '{43,50}' ORDER BY t;
                    QUERY PLAN                     
---------------------------------------------------
 Sort
   Sort Key: t
   ->  Seq Scan on test_money
         Filter: (v && '{$43.00,$50.00}'::money[])
(4 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_money WHERE v @> '{43,50}' ORDER BY t;
                    QUERY PLAN                     
---------------------------------------------------
 Sort
   Sort Key: t
   ->  Seq Scan on test_money
         Filter: (v @> '{$43.00,$50.00}'::money[])
(4 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_money WHERE v <@ '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
                                               QUERY PLAN                                               
--------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: t
   ->  Seq Scan on test_money
         Filter: (v <@ '{$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}'::money[])
(4 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_money WHERE v =  '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: t
   ->  Seq Scan on test_money
         Filter: (v = '{$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}'::money[])
(4 rows)

EXPLAIN (COSTS OFF) SELECT t, v FROM test_money WHERE v %  '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
                                              QUERY PLAN                                               
-------------------------------------------------------------------------------------------------------
 Sort
   Sort Key: t
   ->  Seq Scan on test_money
         Filter: (v % '{$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}'::money[])
(4 rows)

SELECT t, v FROM test_money WHERE v && '{43,50}' ORDER BY t;
 t  |                                       v                                        
----+--------------------------------------------------------------------------------
 43 | {$33.00,$34.00,$35.00,$36.00,$37.00,$38.00,$39.00,$40.00,$41.00,$42.00,$43.00}
 44 | {$34.00,$35.00,$36.00,$37.00,$38.00,$39.00,$40.00,$41.00,$42.00,$43.00,$44.00}
 45 | {$35.00,$36.00,$37.00,$38.00,$39.00,$40.00,$41.00,$42.00,$43.00,$44.00,$45.00}
 46 | {$36.00,$37.00,$38.00,$39.00,$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00}
 47 | {$37.00,$38.00,$39.00,$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00}
 48 | {$38.00,$39.00,$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00}
 49 | {$39.00,$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00}
 50 | {$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00}
 51 | {$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00}
 52 | {$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00}
 53 | {$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00}
 54 | {$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00,$54.00}
 55 | {$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00,$54.00,$55.00}
 56 | {$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00,$54.00,$55.00,$56.00}
 57 | {$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00,$54.00,$55.00,$56.00,$57.00}
 58 | {$48.00,$49.00,$50.00,$51.00,$52.00,$53.00,$54.00,$55.00,$56.00,$57.00,$58.00}
 59 | {$49.00,$50.00,$51.00,$52.00,$53.00,$54.00,$55.00,$56.00,$57.00,$58.00,$59.00}
 60 | {$50.00,$51.00,$52.00,$53.00,$54.00,$55.00,$56.00,$57.00,$58.00,$59.00,$60.00}
(18 rows)

SELECT t, v FROM test_money WHERE v @> '{43,50}' ORDER BY t;
 t  |                                       v                                        
----+--------------------------------------------------------------------------------
 50 | {$40.00,$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00}
 51 | {$41.00,$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00}
 52 | {$42.00,$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00}
 53 | {$43.00,$44.00,$45.00,$46.00,$47.00,$48.00,$49.00,$50.00,$51.00,$52.00,$53.00}
(4 rows)

SELECT t, v FROM test_money WHERE v <@ '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
 t  |                                  v                                   
----+----------------------------------------------------------------------
  1 | {$0.00,$1.00}
  2 | {$0.00,$1.00,$2.00}
  3 | {$0.00,$1.00,$2.00,$3.00}
  4 | {$0.00,$1.00,$2.00,$3.00,$4.00}
  5 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00}
  6 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00}
  7 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00}
  8 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00}
  9 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00}
 10 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}
(10 rows)

SELECT t, v FROM test_money WHERE v =  '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
 t  |                                  v                                   
----+----------------------------------------------------------------------
 10 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}
(1 row)

SET anyarray.similarity_type=cosine;
SELECT t, v FROM test_money WHERE v %  '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
 t  |                                    v                                     
----+--------------------------------------------------------------------------
  3 | {$0.00,$1.00,$2.00,$3.00}
  4 | {$0.00,$1.00,$2.00,$3.00,$4.00}
  5 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00}
  6 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00}
  7 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00}
  8 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00}
  9 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00}
 10 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}
 11 | {$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00}
 12 | {$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00}
 13 | {$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00}
 14 | {$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00}
(12 rows)

SET anyarray.similarity_type=jaccard;
SELECT t, v FROM test_money WHERE v %  '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
 t  |                                   v                                    
----+------------------------------------------------------------------------
  6 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00}
  7 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00}
  8 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00}
  9 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00}
 10 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}
 11 | {$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00}
 12 | {$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00}
(7 rows)

SET anyarray.similarity_type=overlap;
SET anyarray.similarity_threshold = 3;
SELECT t, v FROM test_money WHERE v %  '{0,1,2,3,4,5,6,7,8,9,10}' ORDER BY t;
 t  |                                      v                                       
----+------------------------------------------------------------------------------
  2 | {$0.00,$1.00,$2.00}
  3 | {$0.00,$1.00,$2.00,$3.00}
  4 | {$0.00,$1.00,$2.00,$3.00,$4.00}
  5 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00}
  6 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00}
  7 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00}
  8 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00}
  9 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00}
 10 | {$0.00,$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00}
 11 | {$1.00,$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00}
 12 | {$2.00,$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00}
 13 | {$3.00,$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00}
 14 | {$4.00,$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00}
 15 | {$5.00,$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00,$15.00}
 16 | {$6.00,$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00,$15.00,$16.00}
 17 | {$7.00,$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00,$15.00,$16.00,$17.00}
 18 | {$8.00,$9.00,$10.00,$11.00,$12.00,$13.00,$14.00,$15.00,$16.00,$17.00,$18.00}
(17 rows)

RESET anyarray.similarity_threshold;
